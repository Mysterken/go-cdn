---
version: '3.8'

services:
  cdn:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: go-cdn
    ports:
      - "8080:8080"
    volumes:
      - ../static:/app/static # Mount the local static folder into the container
    environment:
      - GO_ENV=production
    restart: unless-stopped
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - mongonet

  mongo:
    image: mongo
    container_name: mongo
    restart: always
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=example
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.runCommand('ping').ok"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s
    volumes:
      - mongo-data:/data/db # Persist MongoDB data
    networks:
      - mongonet

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=example
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=tribes
      - ME_CONFIG_MONGODB_PORT=27017
    depends_on:
      mongo:
        condition: service_healthy
    volumes: 
      - mongo-data:/data/db
    networks:
      - mongonet

volumes:
  mongo-data:
networks:
  mongonet:
    driver: 'bridge'